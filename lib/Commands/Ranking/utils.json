{
    "name": "score",
    "description": "Determinar a lista dos top-players de diversos locais",
    "usage": {
        "general": "[Prefix][Alias] [-bank|-global] [-xp/-coin/-diamond/-gold/-iron/-rubi/-stone/-wood/-messages/-level] [Limit]",
        "examples": [
            "/Ranking",
            "/Ranking -global -bank -coin 3",
            "/Score -bank",
            "/Rank -global -messages 50",
            "/Score -level 50",
            "/Ranking -bank -gold 3",
            "/Rank --help",
            "score.execute('kill', 'params')",
            "score.env()",
            "score.reset()",
            "score.env().functions.execute.value('kill', 'params')"
        ]
    },
    "license": "MIT",
    "helps": [
        "Se você estiver em todos os grupos, você poderá ocupar todas as posições do ranking, sendo o melhor em todos os grupos no ranking global.",
        "Você pode mudar os parâmetros da exports enviando o valor da Object que deseja editar ao resetar, por exemplo → score.reset({ name: 'Body'}) ← Isso mudaria o module de score para Body, o uso então passaria ser: → Body.funcão ← Isso também permite que você edite a função usando o mesmo método.",
        "Você pode mudar o que os códigos rodam, em tempo real, basta usar a 'env', por exemplo → score.env().name = 'Body' ← Mas este método não atualizará o sistema, somente a Object, os sistemas permanecem intactos.",
        "Você pode configurar o tempo de reset dos resultados ou se eles devem ser resetados usando a env, por exemplo → score.env().settings.wait = 10000 ← Isso mudaria o tempo de espera para 10 segundos, o tempo deve ser em milissegundos.",
        "Alguém lê essas dicas? Se sim, torne-se um programador, ler os tutoriais é de suma importância e poucos desenvolvedores o fazem...",
        "Existem infinitas formas de uso secretas, explore os códigos para descobrir os mistérios dos sistemas!"
    ],
    "exports": {
        "env": "env",
        "messedup": "messedup",
        "exec": "execute",
        "reset": "reset",
        "poswork": "finish"
    },
    "developer": "KillovSky",
    "files": {
        "index.js": "Sistema que faz a coleta das informações e envio.",
        "utils.json": "Dados de fábrica da envInfo."
    },
    "modules": {
        "fs": "Leitura de diretórios e arquivos.",
        "path": "Para inserção do local na envInfo.",
        "../../Dialogues/index": "Funções que retornam os diálogos necessários.",
        "../../index'": "Para rodar funções de outros arquivos."
    },
    "functions": {
        "ambient": {
            "arguments": false,
            "description": "Retorna as variáveis e sistemas do arquivo.",
            "type": "Boolean / Function",
            "value": false
        },
        "messedup": {
            "arguments": {
                "error": {
                    "description": "Instância de erro para formatação.",
                    "type": "Boolean / Error",
                    "value": false
                }
            },
            "description": "Ajusta os valores de erro.",
            "type": "Boolean / Function",
            "value": false
        },
        "exec": {
            "arguments": {
                "kill": {
                    "description": "Funções de controle raiz da Íris.",
                    "type": "Boolean / Object",
                    "value": false
                },
                "env": {
                    "description": "Dados da mensagem recebida.",
                    "type": "Boolean / Object",
                    "value": false
                }
            },
            "description": "Executa o comando representado nesse arquivo.",
            "type": "Boolean / Function",
            "value": false
        },
        "poswork": {
            "arguments": {
                "response": {
                    "description": "Resultados de uma função.",
                    "type": "Any",
                    "value": false
                }
            },
            "description": "Verifica se pode resetar a envInfo e retorna o resultado da função.",
            "type": "Boolean / Function",
            "value": false
        },
        "revert": {
            "arguments": {
                "changeKey": {
                    "description": "Uma Object com valores que existem na envInfo, ela será usada para substituir o sistema em tempo real.",
                    "type": "Object value",
                    "anyValue": false
                }
            },
            "description": "Reseta a envInfo para a Object padrão.",
            "type": "Boolean / Function",
            "value": false
        }
    },
    "settings": {
        "wait": {
            "description": "Tempo em MS que deve esperar antes de resetar.",
            "type": "Number",
            "value": 5000
        },
        "error": {
            "description": "Define se pode printar qualquer erro.",
            "type": "Boolean",
            "value": true
        },
        "ender": {
            "description": "Define se deve resetar a cada erro.",
            "type": "Boolean",
            "value": true
        },
        "finish": {
            "description": "Define se deve resetar a cada finalização.",
            "type": "Boolean",
            "value": true
        }
    },
    "parameters": {
        "location": {
            "description": "Local onde o módulo pode ser encontrado.",
            "type": "Boolean / String",
            "value": "./index"
        },
        "code": {
            "description": "Código do erro que obter.",
            "type": "Boolean / String / Number",
            "value": false
        },
        "message": {
            "description": "Armazena a mensagem do último erro recebido.",
            "type": "Boolean / String",
            "value": false
        },
        "maxlist": {
            "description": "Determina o máxima de pessoas a serem obtidas no ranking.",
            "type": "Number",
            "value": 10
        },
        "stockitem": {
            "description": "Determina o item padrão da busca do ranking.",
            "type": "String",
            "value": "xp"
        }
    },
    "results": {
        "description": "Resultado final da função.",
        "success": true,
        "type": "String / Boolean",
        "value": false
    }
}